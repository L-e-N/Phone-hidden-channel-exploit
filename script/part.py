from connectionDB import getDb
from ast import literal_eval
import matplotlib.pyplot as plt

def plot2(x1, x3, x2, y2, n,title):
    fig = plt.figure(n)
    fig.suptitle(title, fontsize=20)
    plt.grid(True)
#   plt.scatter(x1[0], y2[0], c='red')

    # plt.axvline(0, c='red', label='button')
    for x in x1 :
        # print("x : ", x)
        plt.axvline(x, c='red')
    for x in x3:
        # print("x : ", x)
        plt.axvline(x, c='green')
        # plt.plot(x1, y1, 'r')
    plt.plot(x2, y2)

    # plt.legend(loc='upper left', borderaxespad=0.)

    plt.xlabel('timestamp (ms)')
    plt.ylabel('acceleration (m⋅s−2)')


def formatData():
    accelerometer = []
    button = []
    comments = []
    id = []
    gyroscopeRecord = [[], [], [], []]

    dBResults = getDb()

    for dBResult in dBResults.find():
        accelerometerRecord = [[], [], [], []]
        buttonRecord = [[], []]
        accelerometerRecords = literal_eval(dBResult["accelerometerRecords"])
        buttonRecords = literal_eval(dBResult["buttonRecords"])
        id.append(dBResult["id"])
        comments.append(dBResult["comment"])
        for x in range(int(len(buttonRecords) / 2)):
            buttonRecord[0].append(buttonRecords[2*x])
            buttonRecord[1].append(buttonRecords[2 * x + 1])
        # Partition timestamp, x, y and z axis
        for x in range(int(len(accelerometerRecords)/4)):
            accelerometerRecord[0].append(accelerometerRecords[4*x])
            accelerometerRecord[1].append(accelerometerRecords[4*x + 1])
            accelerometerRecord[2].append(accelerometerRecords[4*x + 2])
            accelerometerRecord[3].append(accelerometerRecords[4*x + 3])
        accelerometer.append(accelerometerRecord)
        button.append(buttonRecord)
    # n = 3
    return accelerometer[0], button[0], comments[0], id[0]
    

def part(n, title): # n between 0 and 3 for timestamp, x, y and z
    print("In part")
    dBResults, buttonRecord, comment, id = formatData()
    # plot(dBResults[0], dBResults[1], 1, "x in first")
    # Get x major pic
    accelerometerGaps = []
    for accelerometerRecordsIndex in range(len(dBResults[n]) - 1):
        accelerometerGap = abs(float(dBResults[n][accelerometerRecordsIndex + 1]) - float(dBResults[n][accelerometerRecordsIndex]))
        accelerometerGaps.append((accelerometerGap, dBResults[0][accelerometerRecordsIndex]))
    print("accelerometerGaps : ", accelerometerGaps)
    firstsX = sorted(accelerometerGaps, reverse=True)[:9]
    firstsTimestamps = []
    for x in firstsX:
        firstsTimestamps.append(x[1])

    plot2(buttonRecord[0], firstsTimestamps, dBResults[0], dBResults[1], n, title + " " + str(id))
    print("SORTED :", firstsX)

def partX():
    part(1,"Record 2, X")


def partY():
    part(2, "Record 2, Y")

def partZ():
    part(3, "Record 2, Z")

partX()
partY()
partZ()
plt.show()
# formatData()
