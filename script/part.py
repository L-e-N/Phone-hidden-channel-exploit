from connectionDB import getDb
from demo import plot, plot2
from ast import literal_eval

def getKey(item):
    item[0]

def formatData():
    accelerometer = []
    buttonRecord = [[], []]
    gyroscopeRecord = [[], [], [], []]

    dBResults = getDb()

    for dBResult in dBResults.find():
        accelerometerRecord = [[], [], [], []]
        accelerometerRecords = literal_eval(dBResult["accelerometerRecords"])
        buttonRecord.append(literal_eval(dBResult["buttonRecords"]))
        # Partition timestamp, x, y and z axis
        for x in range(int(len(accelerometerRecords)/4)):
            accelerometerRecord[0].append(accelerometerRecords[4*x])
            print("accelerometerRecord[0] : ", accelerometerRecord[0])
            accelerometerRecord[1].append(accelerometerRecords[4*x + 1])
            print("accelerometerRecord[1] : ", accelerometerRecord[1])
            accelerometerRecord[2].append(accelerometerRecords[4*x + 2])
            print("accelerometerRecord[2] : ", accelerometerRecord[2])
            accelerometerRecord[3].append(accelerometerRecords[4*x + 3])
            print("accelerometerRecord[3] : ", accelerometerRecord[3])
        print("accelerometerRecord : ", accelerometerRecord)
        accelerometer.append(accelerometerRecord)
    return accelerometer[0]
    

def part():
    print("In part")
    dBResults = formatData()
    plot(dBResults[0], dBResults[1], 1, "x in first")
    plot2()
    # Get x major pic
    accelerometerGaps = []
    for accelerometerRecordsIndex in range(len(dBResults[1]) - 1):
        accelerometerGap = int(dBResults[1][accelerometerRecordsIndex + 1]) - int(dBResults[1][accelerometerRecordsIndex])
        accelerometerGaps.append((accelerometerGap, accelerometerRecordsIndex))
    print("accelerometerGaps : ", accelerometerGaps)
    firstsX = sorted(accelerometerGaps, reverse=True)[:3]
    print("SORTED :", firstsX)

part()
# formatData()
