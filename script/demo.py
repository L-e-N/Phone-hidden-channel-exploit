import matplotlib as mpl
from mpl_toolkits.mplot3d import Axes3D
import numpy as np
import matplotlib.pyplot as plt
import requests
import json
import os
from six.moves import urllib
usr = input('user : ')
psw = input('password : ')
os.environ['DB_USER'] = usr
os.environ['DB_PASSWORD'] = psw
print('user : ',os.getenv('DB_USER'),'password : ',os.getenv('DB_PASSWORD'))

filename = "gyro2"

from pymongo import MongoClient
from bson import ObjectId
print(os.getenv('DB_USER'))
USER = urllib.parse.quote_plus(os.getenv('DB_USER'))
PASSWORD = urllib.parse.quote_plus(os.environ.get('DB_PASSWORD'))
print(USER,PASSWORD)
client = MongoClient()
client = MongoClient('mongodb://%s:%s@mongo' % (USER, PASSWORD))
print(client)
db_name = 'firstdb'
db = client[db_name]
def getDb():
    posts = db.posts
    for post in posts.find():
        print(post["id"])
        print(post["accelerometerRecords"])
    #print(r.text)

def getData():
    accelerometerRecord = [[], [], [], []]
    buttonRecord = [[], []]
    gyroscopeRecord = [[], [], [], []]

    f = open("./data/"+filename+'.txt', "r")
    fl = f.readlines()
    zero = 0
    zero2 = 0
    for x in fl:
        m = x.split(',')
        if m[0] == "accelerometerRecord":
            if zero == 0 :
                zero = float(m[1].split('\n')[0]) #ms
            accelerometerRecord[0].append(float(m[1]) -zero)
            accelerometerRecord[1].append(float(m[2]))
            accelerometerRecord[2].append(float(m[3]))
            accelerometerRecord[3].append(float(m[4].split('\n')[0]))

            #accelerometerRecord[0].append(float(m[1]) - zero)
            #accelerometerRecord[1].append(float(m[2])-accelerometerRecord[1][0])
            #accelerometerRecord[2].append(float(m[3])-accelerometerRecord[2][0])
            #accelerometerRecord[3].append(float(m[4].split('\n')[0])-accelerometerRecord[3][0])
        elif m[0] == "buttonRecord":
            buttonRecord[0].append(float(m[1])-zero)
            buttonRecord[1].append(float(m[2].split('\n')[0]))
        elif m[0] == "gyroscopeRecord":
            if zero2 == 0 :
                zero2 = float(m[1].split('\n')[0]) #ms
            print(zero)
            gyroscopeRecord[0].append(float(m[1]) - zero)
            gyroscopeRecord[1].append(float(m[2]))
            gyroscopeRecord[2].append(float(m[3]))
            gyroscopeRecord[3].append(float(m[4].split('\n')[0]))
    f.close()
    return accelerometerRecord, buttonRecord,gyroscopeRecord


def plot3d(x, y, z):
    mpl.rcParams['legend.fontsize'] = 10

    fig = plt.figure()
    ax = fig.gca(projection='3d')
    ax.plot(x, y, z, label='parametric curve')
    ax.legend()

    plt.show()


def plot(x, y,n,title):
    fig = plt.figure(n)
    plt.plot(x, y)
    fig.suptitle(title, fontsize=20)
    plt.xlabel('timestamp (ms)')
    plt.ylabel('acceleration (m⋅s−2)')
    plt.show()


def plot2(x1, y1, x2, y2, n,title):
    fig = plt.figure(n)
    fig.suptitle(title, fontsize=20)
    plt.grid(True)
#    plt.scatter(x1[0], y2[0], c='red')

    #plt.axvline(0, c='red', label='button')
    for x in x1 :
        plt.axvline(x,c='red')
#    plt.plot(x1, y1, 'r')
    plt.plot(x2, y2, linestyle='--', marker='o',color= 'b',label='accelerometer')

    plt.legend( loc='upper left', borderaxespad=0.)

    plt.xlabel('timestamp (ms)')
    plt.ylabel('acceleration (m⋅s−2)')



#accelerometerRecord, buttonRecord,gyroscopeRecord = getData()
#plot3d(accelerometerRecord[1], accelerometerRecord[2], accelerometerRecord[3])

# plot(buttonRecord[0],buttonRecord[1])
#plot( accelerometerRecord[0], accelerometerRecord[1], 1,filename+' X')
#plot( accelerometerRecord[0], accelerometerRecord[2], 2, filename+' Y')
#plot( accelerometerRecord[0], accelerometerRecord[3], 3,filename+' Z')
#plot2(buttonRecord[0], buttonRecord[1], accelerometerRecord[0], accelerometerRecord[1], 1,filename+' X')
#plot2(buttonRecord[0], buttonRecord[1], accelerometerRecord[0], accelerometerRecord[2], 2,filename+' Y')
#plot2(buttonRecord[0], buttonRecord[1], accelerometerRecord[0], accelerometerRecord[3], 3,filename+' Z')
#plot2(buttonRecord[0], buttonRecord[1], gyroscopeRecord[0], gyroscopeRecord[1], 1,filename+' X')
#plot2(buttonRecord[0], buttonRecord[1], gyroscopeRecord[0], gyroscopeRecord[2], 2,filename+' Y')
#plot2(buttonRecord[0], buttonRecord[1], gyroscopeRecord[0], gyroscopeRecord[3], 3,filename+' Z')


#plt.show()
getDb()