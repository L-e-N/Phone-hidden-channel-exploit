from part import aggregate_firsts, getFirsts, get_id, get_dBResults, find_nearest, formatData, plot
from connectionDB import postPart
import matplotlib.pyplot as plt
import numpy as np

touch_length_before_timestamp = 150
touch_length_after_timestamp =  120

def partX():
    aggregate_firsts(1, "Record 2, X")


def partY():
    aggregate_firsts(2, "Record 2, Y")


def partZ():
    aggregate_firsts(3, "Record 2, Z")


def get_csv_for_one_touch(found_timestamp, dBResults):
    touch_beginning = found_timestamp - touch_length_before_timestamp
    touch_beginning_id = find_nearest(dBResults[0], touch_beginning)
    touch_array = dBResults[0][touch_beginning_id:touch_beginning_id+touch_length_after_timestamp: 4]
    # plot(dBResults[0][touch_beginning_id:touch_beginning_id+touch_length_after_timestamp: 4], dBResults[1][touch_beginning_id:touch_beginning_id+touch_length_after_timestamp: 4], 1, "One touch X")
    # plot(dBResults[0][touch_beginning_id:touch_beginning_id+touch_length_after_timestamp: 4], dBResults[2][touch_beginning_id:touch_beginning_id+touch_length_after_timestamp: 4], 2, "One touch Y")
    # plot(dBResults[0][touch_beginning_id:touch_beginning_id+touch_length_after_timestamp: 4], dBResults[3][touch_beginning_id:touch_beginning_id+touch_length_after_timestamp: 4], 3, "One touch Z")
    # plt.show()
    return touch_array, touch_beginning_id


def create_csv(N):
    # Get firsts values
    dBResults, button_record, comment, record_id = formatData()
    firsts_to_keep, timestamps = aggregate_firsts(N, "To create CSV")
    accelerometer_values = []
    buttons = []
    for i in range(1, len(firsts_to_keep)-1):
        values = []
        touch_array, timestamp_beginning_id = get_csv_for_one_touch(firsts_to_keep[i], dBResults)
        x_array = dBResults[1][timestamp_beginning_id:timestamp_beginning_id+120: 5]
        values.append(x_array)
        y_array = dBResults[2][timestamp_beginning_id:timestamp_beginning_id+120: 5]
        values.append(y_array)
        z_array = dBResults[3][timestamp_beginning_id:timestamp_beginning_id+120: 5]
        values.append(z_array)
        button_id = find_nearest(button_record[0], firsts_to_keep[i])
        flattened_values = np.array(values)
        flattened_values = flattened_values.flatten().tolist()
        accelerometer_values.append(flattened_values)
        buttons.append(button_record[1][button_id])
    postPart(accelerometer_values, buttons, record_id)

create_csv(3)
