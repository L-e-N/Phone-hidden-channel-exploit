
#sudo docker run -d -p 27017:27017 -v ~/data:/data/db mongo
import os

from bson import ObjectId
from flask import Flask,request
from flask_restplus import Resource, Api
import json
from pymongo import MongoClient
from bson import ObjectId

import urllib.parse

# Get environment variables
USER = urllib.parse.quote_plus(os.getenv('DB_USER')) 
PASSWORD = urllib.parse.quote_plus(os.environ.get('DB_PASSWORD'))
print(USER,PASSWORD)
client = MongoClient()
client = MongoClient('mongodb://%s:%s@mongo' % (USER, PASSWORD))
#client = MongoClient('mongo', 27017)
print(client)
db_name = 'firstdb'
db = client[db_name]


app = Flask(__name__)
api = Api(app=app)
class JSONEncoder(json.JSONEncoder):
    def default(self, o):
        if isinstance(o, ObjectId):
            return str(o)
        return json.JSONEncoder.default(self, o)




@api.route("/records/<int:id>")
class Article(Resource):
    def get(self, id):
        posts = db.posts
        #for post in posts.find():
         #   print(post)
        print(id)
        if  id == 0 :
            result =[]
            for post in posts.find():
                result.append(str(post))
                print(str(post))
                print(str(result).strip('[]'))
            return str(result).strip('[]')
        else :
            return str(posts.find_one({"id": id}))

    def post(self, id):
        print(request)
        data = request.json
        posts = db.posts
        result = posts.insert_one(data)
        print('One post: {0}'.format(result.inserted_id))
        return "L'article "+ str(id)+" "+str(data["id"]) +" a été ajouter"



if __name__ == '__main__':
    app.run(host='0.0.0.0', port='8000', debug=True)